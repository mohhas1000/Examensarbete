import { FooterWrapper } from "../../../../file/footer-wrapper";
import { HeaderWrapper } from "../../../../file/header-wrapper";
import { XmlComponent } from "../../../../file/xml-components";
import { IDocGridAttributesProperties } from "./doc-grid/doc-grid-attributes";
import { ILineNumberAttributes } from "./line-number";
import { IPageBordersOptions } from "./page-border";
import { IPageMarginAttributes } from "./page-margin/page-margin-attributes";
import { IPageNumberTypeAttributes } from "./page-number";
import { IPageSizeAttributes } from "./page-size/page-size-attributes";
import { SectionType } from "./type/section-type-attributes";
import { SectionVerticalAlignValue } from "./vertical-align";
export interface IHeaderFooterGroup<T> {
    readonly default?: T;
    readonly first?: T;
    readonly even?: T;
}
export interface ISectionPropertiesOptions {
    readonly page?: {
        readonly size?: IPageSizeAttributes;
        readonly margin?: IPageMarginAttributes;
        readonly pageNumbers?: IPageNumberTypeAttributes;
        readonly borders?: IPageBordersOptions;
    };
    readonly grid?: IDocGridAttributesProperties;
    readonly headerWrapperGroup?: IHeaderFooterGroup<HeaderWrapper>;
    readonly footerWrapperGroup?: IHeaderFooterGroup<FooterWrapper>;
    readonly lineNumbers?: ILineNumberAttributes;
    readonly titlePage?: boolean;
    readonly verticalAlign?: SectionVerticalAlignValue;
    readonly column?: {
        readonly space?: number;
        readonly count?: number;
        readonly separate?: boolean;
    };
    readonly type?: SectionType;
}
export declare class SectionProperties extends XmlComponent {
    constructor({ page: { size: { width, height, orientation }, margin: { top, right, bottom, left, header, footer, gutter, mirror, }, pageNumbers: { start: pageNumberStart, formatType: pageNumberFormatType, separator: pageNumberSeparator, }, borders: { pageBorders, pageBorderTop, pageBorderRight, pageBorderBottom, pageBorderLeft, }, }, grid: { linePitch }, headerWrapperGroup, footerWrapperGroup, lineNumbers: { countBy: lineNumberCountBy, start: lineNumberStart, restart: lineNumberRestart, distance: lineNumberDistance }, titlePage, verticalAlign, column: { space, count, separate }, type, }?: ISectionPropertiesOptions);
    private addHeaders;
    private addFooters;
}
